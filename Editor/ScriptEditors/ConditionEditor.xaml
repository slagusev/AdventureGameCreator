<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Controls="clr-namespace:Editor.Editors"
        xmlns:xckt="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:Editor="clr-namespace:Editor" x:Class="Editor.ScriptEditors.ConditionEditor"
        Title="If...Then...Else..." Height="500" Width="500">
    <Window.Resources>
        <Editor:VisibilityConverter x:Key="VisibilityConverter"/>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <Binding Path="TestCondition1" Source="{StaticResource TestDataStatic}"/>
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <TabControl>
            <TabItem Header="If...">
                <ScrollViewer>
                    <StackPanel>
                        <TextBlock><Run Text="Condition Type:"/></TextBlock>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding IsComparisonToConstant, Mode=TwoWay}" Content="Compare Variable To Constant"/>
                            <CheckBox IsChecked="{Binding IsComparisonToVariable, Mode=TwoWay}" Content="Compare Variable To Variable"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding ItemIsNotNull, Mode=TwoWay}" Content="Item is Nonempty"/>
                            <CheckBox IsChecked="{Binding ItemIsClass, Mode=TwoWay}" Content="Item is of Type"/>
                            <CheckBox IsChecked="{Binding PlayerHasItem, Mode=TwoWay}" Content="Player Has Item"/>
                            
                        </StackPanel>
                        <StackPanel Visibility="{Binding IsComparison, Converter={StaticResource VisibilityConverter}}">
                            <TextBlock><Run Text="Comparison Type:"/></TextBlock>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsEquals}" Content="Equals"/>
                                <CheckBox IsChecked="{Binding IsNotEquals}" Content="Does Not Equal"/>
                                <CheckBox Visibility="{Binding IsString, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}" IsChecked="{Binding IsLessThan}" Content="Less Than"/>
                                <CheckBox Visibility="{Binding IsString, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}" IsChecked="{Binding IsLessThanOrEqualTo}" Content="Less Than or Equal"/>
                            </StackPanel>
                        
                            <StackPanel Orientation="Horizontal">
                                <CheckBox Visibility="{Binding IsString, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}" IsChecked="{Binding IsGreaterThan}" Content="Greater Than"/>
                                <CheckBox Visibility="{Binding IsString, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}" IsChecked="{Binding IsGreaterThanOrEqualTo}" Content="Greater Than or Equal"/>
                                <CheckBox Visibility="Hidden">asdf</CheckBox>
                            </StackPanel>
                        
                        <TextBlock><Run Text="Compare:"/></TextBlock>
                            <Controls:VariableSelector SelectedItem="{Binding SelectedVariable, Mode=TwoWay}" ShowCommonEventRefs="False" ShowItems="False" Height="150"/>
                        <TextBlock><Run Text="To:"/></TextBlock>
                            <Controls:VariableSelector Height="150" ShowItems="False" ShowCommonEventRefs="False" ShowDateTime="{Binding IsDateTime}" ShowNumber="{Binding IsNumber}" ShowString="{Binding IsString}" Visibility="{Binding IsComparisonToVariable, Converter={StaticResource VisibilityConverter}}" SelectedItem="{Binding VariableToCompare, Mode=TwoWay}"/>
                            <StackPanel Visibility="{Binding IsComparisonToConstant, Converter={StaticResource VisibilityConverter}}">
                                <xckt:DateTimePicker Visibility="{Binding IsDateTime, Converter={StaticResource VisibilityConverter}}" HorizontalAlignment="Left" Width="300" Value="{Binding DateToCompareTo}"/>
                                <TextBox Text="{Binding NumberToCompareTo}" Visibility="{Binding IsNumber, Converter={StaticResource VisibilityConverter}}" HorizontalAlignment="Left" Width="200"/>
                                <TextBox Text="{Binding StringToCompareTo}" Visibility="{Binding IsString, Converter={StaticResource VisibilityConverter}}" HorizontalAlignment="Left" Width="200"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Visibility="{Binding ItemIsNotNull, Converter={StaticResource VisibilityConverter}}">
                            <Controls:VariableSelector ShowCommonEventRefs="False" SelectedItem="{Binding SelectedVariable, Mode=TwoWay}" ShowItems="True" ShowNumber="False" ShowDateTime="False" ShowString="False" Height="150"/>
                        </StackPanel>
                        <StackPanel Visibility="{Binding ItemIsClass, Converter={StaticResource VisibilityConverter}}">
                            <Controls:VariableSelector ShowCommonEventRefs="False" SelectedItem="{Binding SelectedVariable, Mode=TwoWay}" ShowItems="True" ShowNumber="False" ShowDateTime="False" ShowString="False" Height="150"/>
                            <TextBlock>is of class:</TextBlock>
                            <ListBox SelectedItem="{Binding SelectedClass}" ItemsSource="{Binding ItemClasses, Source={StaticResource MainViewModelStatic}}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"></TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                        <StackPanel Visibility="{Binding PlayerHasItem, Converter={StaticResource VisibilityConverter}}">
                            <Controls:ItemSelector SelectedItem="{Binding SelectedItem, Mode=TwoWay}" Height="150"/>
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Then...">
                <Controls:ScriptControl DataContext="{Binding ThenStatement}"/>
            </TabItem>
            <TabItem Header="Else...">
                <Controls:ScriptControl DataContext="{Binding ElseStatement}"/>
            </TabItem>
        </TabControl>
        <Button HorizontalAlignment="Center" Width="100" Grid.Row="1" Margin="10" Click="Button_Click_1" Content="OK"/>
    </Grid>
</Window>
