<UserControl x:Class="Editor.Editors.StatusEffectEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
              xmlns:Editor="clr-namespace:Editor"
             xmlns:Controls="clr-namespace:Editor.Editors"
             xmlns:ObjectTypes="clr-namespace:Editor.ObjectTypes"
             d:DesignHeight="1000" d:DesignWidth="1000">
    <UserControl.Resources>
        <Editor:VisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Path="TestStatusEffect" Source="{StaticResource TestDataStatic}"/>
    </UserControl.DataContext>
    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel>
            <TextBlock FontSize="24" FontWeight="Bold" ><Run Text="Status Effect: "/><Run Text="{Binding Name}"/></TextBlock>
            <TextBlock>ID:
        <Run Text="{Binding Id}"></Run></TextBlock>
            <StackPanel ToolTip="Define a sorting group for the " Margin="0,20,0,0" Orientation="Horizontal">
                <TextBlock>Group:</TextBlock>
                <TextBox Width="200" Margin="20,0,0,0" Text="{Binding Group, UpdateSourceTrigger=PropertyChanged}"></TextBox>
            </StackPanel>
            <TextBlock>Note: Temporary Variables (Ones that start with an _) are saved throughout the lifetime of a status effect.</TextBlock>
            <TextBlock>This means data may be saved to compare against.</TextBlock>
            <Expander Header="Arguments" Margin="20,20,5,0">
                <StackPanel>
                    <TextBlock><Run Text="Arguments are values that are sent to the status effect upon initialization."/></TextBlock>
                    <Grid Margin="20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="7*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel>
                            <ListBox Margin="20" Height="150" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Arguments}" SelectedItem="{Binding SelectedArgument, Mode=TwoWay}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Button Margin="20,5" Command="{Binding AddArgumentCommand}" Content="New Argument"/>
                            <Button Margin="20,5" Command="{Binding RemoveArgumentCommand}" Content="Remove Selected Argument"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" Margin="20">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock><Run Text="Name:"/></TextBlock>
                                <TextBox Margin="20,0" Width="200" Text="{Binding SelectedArgument.Name, Mode=TwoWay}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock><Run Text="Type"/></TextBlock>
                                <CheckBox Margin="20,0" IsChecked="{Binding SelectedArgument.IsNumber, Mode=TwoWay}" Content="Number"/>
                                <CheckBox Margin="20,0" IsChecked="{Binding SelectedArgument.IsString, Mode=TwoWay}" Content="String"/>
                            </StackPanel>
                        </StackPanel>

                    </Grid>
                </StackPanel>
            </Expander>
            <Expander Header="On Initialize" Margin="20,20,5,0">
                <StackPanel>
                <TextBlock>
                    This script occurs when the status effect is first added to the player. 
                </TextBlock>
                    <Controls:ScriptControl DataContext="{Binding OnInitialize}" Height="300" ScrollViewer.VerticalScrollBarVisibility="Auto"></Controls:ScriptControl>
                </StackPanel>
            </Expander>
            <Expander Header="On Stack" Margin="20,20,5,0">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">
                        If a status effect occurs more than once, it is said to "stack". If the following checkbox is checked, then the status effect will occur more than once. If unchecked, a script will occur instead. This script can be used to increase the duration of the effect, or the severity of the effect, or even something else entirely.
                    </TextBlock>
                    <CheckBox IsChecked="{Binding CanOccurMultipleTimes, Mode=TwoWay}">The Status Effect Can Stack</CheckBox>
                    <Grid Visibility="{Binding CanOccurMultipleTimes, ConverterParameter=Invert, Converter={StaticResource VisibilityConverter}}">
                    <Controls:ScriptControl DataContext="{Binding OnStack}" Height="300" ScrollViewer.VerticalScrollBarVisibility="Auto"></Controls:ScriptControl>
                    </Grid>
                </StackPanel>
            </Expander>
            <Expander Header="On Move" Margin="20,20,5,0">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">
                        This effect occurs immediately after the Movement script, before the equipment On Move scripts. 
                    </TextBlock>
                    <Controls:ScriptControl DataContext="{Binding OnMove}" Height="300" ScrollViewer.VerticalScrollBarVisibility="Auto"></Controls:ScriptControl>
                </StackPanel>
            </Expander>
            <Expander Header="Check If Cleared" Margin="20,20,5,0">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">
                        This effect occurs immediately after the equipment Move script, as well as whenever the special script, "Check Status Effects" is called. Return True if the status effect has been completed.
                    </TextBlock>
                    <Controls:ScriptControl DataContext="{Binding CheckIfCleared}" Height="300" ScrollViewer.VerticalScrollBarVisibility="Auto"></Controls:ScriptControl>
                </StackPanel>
            </Expander>
            <Expander Header="Finalize" Margin="20,20,5,0">
                <StackPanel>
                    <TextBlock TextWrapping="Wrap">
                        This effect occurs when the Check If Cleared script returns true, as well as when "Clear Status Effect" script is called with the "Run Finalize Event" option checked. Immediately after this script, the status effect is removed from the player. Use this script to clean up any temporary changes to variables, as well as cause events that happen when the status effect wears off (i.e. timed events).
                    </TextBlock>
                    <Controls:ScriptControl DataContext="{Binding OnFinish}" Height="300" ScrollViewer.VerticalScrollBarVisibility="Auto"></Controls:ScriptControl>
                </StackPanel>
            </Expander>
        </StackPanel>
        
    </ScrollViewer>
</UserControl>
