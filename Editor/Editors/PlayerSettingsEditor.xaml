<UserControl x:Class="Editor.Editors.PlayerSettingsEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             xmlns:Editor="clr-namespace:Editor"
             xmlns:Controls="clr-namespace:Editor.Editors"
             xmlns:ObjectTypes="clr-namespace:Editor.ObjectTypes"
             d:DesignHeight="1000" d:DesignWidth="1000">
    <UserControl.Resources>
        <Editor:VisibilityConverter x:Key="VisibilityConverter"/>
    </UserControl.Resources>
    <UserControl.DataContext>
        <Binding Path="Settings1" Source="{StaticResource TestDataStatic}"/>
    </UserControl.DataContext>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <StackPanel>
            <TextBlock FontSize="24" FontWeight="Bold" ><Run Text="Game And Character Settings"/></TextBlock>
            <Expander Header="Player Description" Margin="20,20,5,0">
                <Controls:ScriptControl Height="200" DataContext="{Binding PlayerDescription}"></Controls:ScriptControl>
            </Expander>
            <Expander Header="Movement Script" Margin="20,0,5,0">
                <StackPanel>
                    <Grid>
                        <TextBlock TextWrapping="Wrap" MaxWidth="500" HorizontalAlignment="Left">Note: This script will run every time the player attempts to move. If this script returns "False", the move will be canceled and the player will remain where he was.</TextBlock>
                    </Grid>
                    <Controls:ScriptControl Height="200" DataContext="{Binding MovementScript}"></Controls:ScriptControl>
                </StackPanel>
            </Expander>
            <Expander Header="Player Statistics" Margin="20,0,5,0">
                <Grid Margin="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200">
                            
                        </ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <ListBox Height="400" VerticalAlignment="Top" ItemsSource="{Binding PlayerStatistics}" SelectedItem="{Binding SelectedStatistic}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Label}"></TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Button Margin="10" Command="{Binding NewStatisticCommand}">New Statistic</Button>
                        <Button Margin="10" Command="{Binding RemoveSelectedStatisticCommand}">Remove Selected Statistic</Button>
                        <Button Margin="10" Command="{Binding MoveUpCommand}">Move Up</Button>
                        <Button Margin="10" Command="{Binding MoveDownCommand}">Move Down</Button>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Visibility="{Binding SelectedStatistic, Converter={StaticResource VisibilityConverter}}">
                        <StackPanel Grid.Column="1" Margin="20" HorizontalAlignment="Left" DataContext="{Binding SelectedStatistic}">
                            <TextBlock>
                                Label:
                            </TextBlock>
                            <TextBox Margin="10" Width="100" HorizontalAlignment="Left" Text="{Binding Label, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            <Expander Header="Display Condition (Blank == Always show)" Margin="10">
                                <Controls:ScriptControl DataContext="{Binding DisplayCondition}" Height="200" Width="300"></Controls:ScriptControl>
                            </Expander>
                            <TextBlock>Associated Variable:</TextBlock>
                            <Controls:VariableSelector Margin="10" Height="150" HorizontalAlignment="Left" Width="200" SelectedItem="{Binding AssociatedVariable, Mode=TwoWay}" ShowCommonEventRefs="False" ShowItems="False"/>
                            <TextBlock>Display As:</TextBlock>
                            <StackPanel Margin="10" Orientation="Horizontal">
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding IsPlaintext}">Plaintext</CheckBox>
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding IsProgressBar}" Visibility="{Binding AssociatedVariable.LinkedVariable.IsNumber, Converter={StaticResource VisibilityConverter}}">Progress Bar</CheckBox>
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding IsBalanceBar}" Visibility="{Binding AssociatedVariable.LinkedVariable.IsNumber, Converter={StaticResource VisibilityConverter}}">Balance Bar</CheckBox>
                            </StackPanel>

                            <CheckBox Margin="10,0,10,0" IsChecked="{Binding HighWarning}" Visibility="{Binding IsPlaintext, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}">Change Color when High</CheckBox>
                            <CheckBox Margin="10,0,10,0" IsChecked="{Binding LowWarning}" Visibility="{Binding IsPlaintext, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}">Change Color when Low</CheckBox>
                            <StackPanel Visibility="{Binding IsBalanceBar, Converter={StaticResource VisibilityConverter}}">
                                <TextBlock Margin="0,10,0,0">Low Value Label:</TextBlock>
                                <TextBox Margin="10" Text="{Binding BalanceBarLowLabel, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                                <TextBlock Margin="0,10,0,0">High Value Label</TextBlock>
                                <TextBox Margin="10" Text="{Binding BalanceBarHighLabel, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Visibility="{Binding SelectedStatistic, Converter={StaticResource VisibilityConverter}}">
                        <StackPanel Grid.Column="2" DataContext="{Binding SelectedStatistic}" Visibility="{Binding IsPlaintext, Converter={StaticResource VisibilityConverter}, ConverterParameter=Invert}">
                        
                        <TextBlock>Minimum Value:</TextBlock>
                        <StackPanel>
                            <StackPanel Margin="10" Orientation="Horizontal">
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding MinimumValueConstant}">Constant</CheckBox>
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding MinimumValueVariable}">Variable</CheckBox>
                            </StackPanel>
                            <TextBox Margin="10" Width="200" HorizontalAlignment="Left" Visibility="{Binding MinimumValueConstant, Converter={StaticResource VisibilityConverter}}" Text="{Binding MinimumValueConstantValue, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                <Controls:VariableSelector Margin="10" Height="150" HorizontalAlignment="Left" Width="200" ShowDateTime="False" ShowItems="False" ShowString="False" ShowCommonEventRefs="False" SelectedItem="{Binding MinimumValueVariableValue, Mode=TwoWay}" Visibility="{Binding MinimumValueVariable, Converter={StaticResource VisibilityConverter}}"></Controls:VariableSelector>
                        </StackPanel>


                        <TextBlock>Maximum Value:</TextBlock>
                        <StackPanel>
                            <StackPanel Margin="10" Orientation="Horizontal">
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding MaximumValueConstant}">Constant</CheckBox>
                                <CheckBox Margin="0,0,10,0" IsChecked="{Binding MaximumValueVariable}">Variable</CheckBox>
                            </StackPanel>
                            <TextBox Margin="10" Width="200" HorizontalAlignment="Left" Visibility="{Binding MaximumValueConstant, Converter={StaticResource VisibilityConverter}}" Text="{Binding MaximumValueConstantValue, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                <Controls:VariableSelector Margin="10" Height="150" HorizontalAlignment="Left" Width="200" ShowDateTime="False" ShowItems="False" ShowString="False" ShowCommonEventRefs="False" SelectedItem="{Binding MaximumValueVariableValue, Mode=TwoWay}" Visibility="{Binding MaximumValueVariable, Converter={StaticResource VisibilityConverter}}"></Controls:VariableSelector>
                        </StackPanel>
                    </StackPanel>
                    </StackPanel>
                </Grid>
            </Expander>

            <Expander Header="Equipment Slots" Margin="20,0,5,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                <StackPanel HorizontalAlignment="Left" Margin="10">
                    <ListBox Width="150" Height="200" ItemsSource="{Binding EquipmentSlots}" SelectedItem="{Binding SelectedEquipmentSlot}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"></TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Button Margin="0,10" Command="{Binding AddEquipmentSlotCommand}">New Slot</Button>
                        <Button Command="{Binding RemoveEquipmentSlotCommand}">Remove Slot</Button>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="10" Visibility="{Binding SelectedEquipmentSlot, Converter={StaticResource VisibilityConverter}}">
                        <TextBlock>Name:</TextBlock>
                        <TextBox Margin="10" Width="150" HorizontalAlignment="Left" Text="{Binding SelectedEquipmentSlot.Name, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                    </StackPanel>
                </Grid>
            </Expander>
        </StackPanel>
    </ScrollViewer>
</UserControl>
